<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_value</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prop_name = ""
map = global.test_prop
config_map = global.test_prop_config
value = 0
show_value = 0
value_type = valuetypes.number
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if value_type = valuetypes.number {
    sprite_index = spr_value
    mask_index = spr_value
    show_value = real(value)
}
else
if value_type = valuetypes.check {
    sprite_index = spr_check
    mask_index = spr_check
    show_value = bool(value)
    image_index = show_value
}
else
if value_type = valuetypes.text {
    sprite_index = spr_value
    mask_index = spr_value
    show_value = string(value)
}

if prop_name != "" {
    if ds_map_exists(map,prop_name) {
        if global.cur_obj.object_index = obj_part {
            if global.cur_obj.move = false {
                ds_map_replace(map,prop_name,show_value)
                value_type = ds_map_find_value(config_map,prop_name)
            } else {
                if prop_name = "X" {
                    value = global.cur_obj.x
                } else
                if prop_name = "Y" {
                    value = global.cur_obj.y
                }
                ds_map_replace(map,"X",mouse_x)
                ds_map_replace(map,"Y",mouse_y)
            }
        } else {
            ds_map_replace(map,prop_name,show_value)
            value_type = ds_map_find_value(config_map,prop_name)
        }
    }
}

if position_meeting(mouse_x,mouse_y,obj_prop_btn) {
    global.mouse_on_ui = true
} else {
    global.mouse_on_ui = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if value_type = valuetypes.number {
    value = real(get_string("Set Value",string(value)))
}
else
if value_type = valuetypes.check {
    value = bool(not value)
}
else
if value_type = valuetypes.text {
    value = string(get_string("Set Value",value))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_mini)
draw_set_halign(fa_right)
draw_text_colour(x-16,y-8,prop_name,c_black,c_black,c_black,c_black,1)
draw_set_halign(fa_left)
if value_type = valuetypes.number {
    draw_self()
    draw_text_colour(x,y-8,string(show_value),c_black,c_black,c_black,c_black,1)
}
else
if value_type = valuetypes.check {
    draw_self()
}
else
if value_type = valuetypes.text {
    draw_self()
    draw_text_colour(x,y-8,show_value,c_black,c_black,c_black,c_black,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
